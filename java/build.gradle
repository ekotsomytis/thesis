plugins {
	id 'java'
	id 'application'
	id 'org.springframework.boot' version '2.6.4'
	id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

application {
	// Specify the main class directly using the mainClass property
	mainClassName  = 'com.example.thesisprototype.ThesisPrototypeApplication'
}

jar {
	manifest {
		attributes 'Main-Class': application.mainClass.get()
	}
}
java {
	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
	toolchain {
		languageVersion.set(JavaLanguageVersion.of(17))
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
	implementation 'io.kubernetes:client-java:13.0.0'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	// JWT Library for creating and validating tokens
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation 'com.github.docker-java:docker-java:3.2.13'
	implementation 'com.github.docker-java:docker-java-transport-httpclient5:3.2.13'
	implementation 'org.yaml:snakeyaml:1.29'
	implementation 'org.glassfish.jersey.core:jersey-server:2.34'
	implementation 'org.flywaydb:flyway-core'
}

tasks.named('test') {
	useJUnitPlatform()
}
